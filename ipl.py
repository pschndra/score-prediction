# -*- coding: utf-8 -*-
"""IPL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Uxj_EDuCamKq3fboW0qMWyg_-4rd-uGf
"""

import pandas as pd
import numpy as np
import pickle
import matplotlib.pyplot as plt

df = pd.read_csv("ipl.csv",parse_dates= ['date'])

df.head(5)

attributes_not_require = ['venue','mid','batsman','bowler','striker','non-striker']
df.drop(attributes_not_require,axis=1,inplace=True)

#df.info()
#df.describe()
#df.isnull().sum()
df.boxplot(column=['runs'])
plt.show

current_teams = ['Kolkata Knight Riders','Chennai Super Kings','Rajasthan Royals','Mumbai Indians'
,'Kings XI Punjab','Royal Challengers Bangalore','Delhi Daredevils','Sunrisers Hyderabad']

df = df[(df['bat_team'].isin(current_teams)) & (df['bowl_team'].isin(current_teams))]

df= df[df['overs']>5]

encode_df = pd.get_dummies(data=df,columns=['bat_team','bowl_team'])

encode_df.columns

"""encode_df.dtypes

"""

from datetime import datetime
#df['date'] = df['date'].apply(lambda x: datetime.strptime(x, '%Y-%m-%d'))

encode_df.date=pd.to_datetime(encode_df.date, errors='coerce')

encode_df.dtypes



encoded_df = encode_df[['date','bat_team_Chennai Super Kings',
       'bat_team_Delhi Daredevils', 'bat_team_Kings XI Punjab',
       'bat_team_Kolkata Knight Riders', 'bat_team_Mumbai Indians',
       'bat_team_Rajasthan Royals', 'bat_team_Royal Challengers Bangalore',
       'bowl_team_Chennai Super Kings', 'bowl_team_Delhi Daredevils',
       'bowl_team_Kings XI Punjab', 'bowl_team_Kolkata Knight Riders',
       'bowl_team_Mumbai Indians', 'bowl_team_Rajasthan Royals',
       'bowl_team_Royal Challengers Bangalore','runs', 'wickets', 'overs', 'runs_last_5', 'wickets_last_5', 'total'
      ]]



X_train = encoded_df.drop(labels='total', axis=1)[encoded_df['date'].dt.year <= 2016]
X_test = encoded_df.drop(labels='total', axis=1)[encoded_df['date'].dt.year >= 2017]
y_train = encoded_df[encoded_df['date'].dt.year <= 2016]['total'].values
y_test = encoded_df[encoded_df['date'].dt.year >= 2017]['total'].values

X_train.drop(labels='date', axis=True, inplace=True)
X_test.drop(labels='date', axis=True, inplace=True)

from sklearn.ensemble import RandomForestRegressor
regressor = RandomForestRegressor(n_estimators = 100, random_state = 0)
regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)

df = pd.DataFrame({'Real Values':y_test, 'Predicted Values':y_pred})
df

from sklearn.metrics import mean_squared_error 
mse= mean_squared_error(y_pred,y_test)
mse

filename = 'ipl.pkl'
pickle.dump(regressor, open(filename, 'wb'))

import seaborn as sns
sns.distplot(y_test-y_pred)

